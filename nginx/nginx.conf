# ==============================================================================
# LYRICLESS - NGINX CONFIGURATION
# ==============================================================================
# Production-ready nginx configuration with security headers and caching

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Logging format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;
    
    # Performance settings optimized for video processing
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 75;
    types_hash_max_size 4096;
    client_max_body_size 2G;  # Increased for large video uploads
    client_body_timeout 300s;  # Extended timeout for video uploads
    client_header_timeout 60s;
    
    # Buffer settings for large video files
    client_body_buffer_size 128k;
    client_header_buffer_size 4k;
    large_client_header_buffers 4 16k;
    
    # Proxy buffer settings for video streaming
    proxy_buffering on;
    proxy_buffer_size 128k;
    proxy_buffers 32 128k;
    proxy_busy_buffers_size 256k;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/json
        application/xml+rss
        application/atom+xml
        image/svg+xml
        application/wasm;
    
    # Security headers
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "microphone=(), camera=(), geolocation=()" always;
    
    # Hide nginx version
    server_tokens off;
    
    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=downloads:10m rate=5r/s;
    
    # Upstream Next.js application
    upstream lyricless_app {
        server lyricless:3000;
        keepalive 32;
    }
    
    # ==============================================================================
    # Main Server Block
    # ==============================================================================
    server {
        listen 80;
        server_name localhost;
        
        # Security: Return 444 for requests to IP address
        if ($host != "localhost") {
            return 444;
        }
        
        # Static files caching
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            proxy_pass http://lyricless_app;
            proxy_cache_bypass $http_upgrade;
            
            # Caching headers
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Content-Type-Options nosniff;
            
            # Security headers for static files
            add_header X-Frame-Options "DENY";
            add_header Referrer-Policy "strict-origin-when-cross-origin";
        }
        
        # WebAssembly files - special handling
        location ~* \.wasm$ {
            proxy_pass http://lyricless_app;
            
            # WASM specific headers
            add_header Content-Type application/wasm;
            add_header Cross-Origin-Embedder-Policy require-corp;
            add_header Cross-Origin-Opener-Policy same-origin;
            
            # Caching
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
        
        # API routes with rate limiting
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            limit_req_status 429;
            
            proxy_pass http://lyricless_app;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # API specific headers
            add_header X-Content-Type-Options nosniff;
        }
        
        # Video download and processing endpoints with extended timeouts
        location ~ ^/api/(download|extract|convert)/ {
            limit_req zone=downloads burst=10 nodelay;
            limit_req_status 429;
            
            proxy_pass http://lyricless_app;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Extended timeouts for video processing
            proxy_read_timeout 600s;  # 10 minutes for large video processing
            proxy_connect_timeout 30s;
            proxy_send_timeout 600s;
            
            # Disable buffering for streaming responses
            proxy_buffering off;
            proxy_max_temp_file_size 0;
            
            # Headers for video downloads
            add_header X-Content-Type-Options nosniff;
            add_header Content-Security-Policy "default-src 'self'";
        }
        
        # Direct video file serving (if storing processed videos)
        location /downloads/ {
            alias /var/www/downloads/;
            
            # Video streaming optimizations
            location ~* \.(mp4|avi|mkv|mov|webm|flv|m4v)$ {
                # Enable range requests for video seeking
                add_header Accept-Ranges bytes;
                
                # Prevent caching of video files
                add_header Cache-Control "no-cache, no-store, must-revalidate";
                add_header Pragma "no-cache";
                add_header Expires "0";
                
                # Security headers for video files
                add_header X-Frame-Options "SAMEORIGIN";
                add_header X-Content-Type-Options "nosniff";
                
                # MIME type enforcement
                location ~ \.mp4$ { add_header Content-Type video/mp4; }
                location ~ \.webm$ { add_header Content-Type video/webm; }
                location ~ \.avi$ { add_header Content-Type video/x-msvideo; }
                location ~ \.mkv$ { add_header Content-Type video/x-matroska; }
                location ~ \.mov$ { add_header Content-Type video/quicktime; }
                
                # Optional: Limit download speed to prevent server overload
                # limit_rate 10m;  # Limit to 10 MB/s per connection
            }
            
            # Audio files
            location ~* \.(mp3|wav|flac|aac|ogg)$ {
                add_header Accept-Ranges bytes;
                add_header Cache-Control "no-cache, no-store, must-revalidate";
                add_header X-Content-Type-Options "nosniff";
            }
            
            # Deny access to non-media files
            location ~* \.(txt|log|conf|php|py|sh|exe|bat)$ {
                deny all;
            }
        }
        
        # Browser extension files
        location /extension/ {
            proxy_pass http://lyricless_app;
            
            # Extension specific headers
            add_header Content-Type application/json;
            add_header Access-Control-Allow-Origin "*";
            expires 1d;
        }
        
        # Main application
        location / {
            proxy_pass http://lyricless_app;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Security headers
            add_header X-Frame-Options "DENY";
            add_header X-Content-Type-Options "nosniff";
            add_header Referrer-Policy "strict-origin-when-cross-origin";
        }
        
        # Security: Block access to sensitive files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        location ~ /(package\.json|tsconfig\.json|next\.config\.) {
            deny all;
            access_log off;
            log_not_found off;
        }
    }
    
    # ==============================================================================
    # HTTPS Server Block (Uncomment for SSL)
    # ==============================================================================
    # server {
    #     listen 443 ssl http2;
    #     server_name localhost;
    #     
    #     # SSL Configuration
    #     ssl_certificate /etc/nginx/ssl/cert.pem;
    #     ssl_certificate_key /etc/nginx/ssl/key.pem;
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384;
    #     ssl_prefer_server_ciphers off;
    #     
    #     # Include all location blocks from HTTP server here
    # }
}