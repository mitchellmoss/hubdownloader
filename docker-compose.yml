# ==============================================================================
# LYRICLESS - SERVER-SIDE VIDEO DOWNLOADER
# ==============================================================================
# Docker Compose for server-side video processing with Puppeteer and yt-dlp
# Next.js 14 + Puppeteer + yt-dlp + ffmpeg

version: '3.8'

services:
  # ==============================================================================
  # Main Application Service - Server-Side Processing
  # ==============================================================================
  lyricless:
    build:
      context: .
      dockerfile: Dockerfile.simple
    container_name: lyricless-app
    restart: unless-stopped
    
    # Resource limits optimized for server-side processing
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 512M
    
    # Environment variables for production
    environment:
      - NODE_ENV=production
      - PORT=3000
      - HOSTNAME=0.0.0.0
      - NEXT_TELEMETRY_DISABLED=1
      - DATABASE_URL=file:/app/data/database.db
      - ADMIN_PIN=Kvpd6!Xwmb@YT@b3
      - PUPPETEER_EXECUTABLE_PATH=/usr/bin/chromium-browser
      - PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true
    
    # Port mapping
    ports:
      - "3000:3000"
    
    # Volume mounts for server-side architecture
    volumes:
      # Database persistence
      - lyricless_data:/app/data
      # Downloads directory
      - lyricless_downloads:/app/downloads
      # Temporary files
      - lyricless_temp:/app/temp
      # Next.js cache
      - lyricless_cache:/app/.next/cache
    
    # Security settings
    security_opt:
      - no-new-privileges:true
    
    # Health check - using lightweight endpoint
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 15s
      retries: 3
      start_period: 90s
    
    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "3"
    
    networks:
      - lyricless-network

  # ==============================================================================
  # Nginx Reverse Proxy with WebAssembly Support
  # ==============================================================================
  nginx:
    image: nginx:alpine
    container_name: lyricless-nginx
    restart: unless-stopped
    profiles: ["production"]  # Only start in production profile
    
    ports:
      - "80:80"
      - "443:443"
    
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - nginx_logs:/var/log/nginx
    
    depends_on:
      - lyricless
    
    # Security settings
    security_opt:
      - no-new-privileges:true
    
    networks:
      - lyricless-network

# ==============================================================================
# Networks
# ==============================================================================
networks:
  lyricless-network:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: lyricless-net

# ==============================================================================
# Volumes - Server-Side Architecture
# ==============================================================================
volumes:
  # Database storage (SQLite)
  lyricless_data:
    driver: local
  
  # Downloads directory (temporary video files)
  lyricless_downloads:
    driver: local
  
  # Temporary processing files
  lyricless_temp:
    driver: local
  
  # Application cache (Next.js build cache)
  lyricless_cache:
    driver: local
  
  # Nginx logs (production only)
  nginx_logs:
    driver: local